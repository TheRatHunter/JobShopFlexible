--------------------------------------------------------------------------------------
Rapport de tests de nos différents algorithmes autour du problème du Job Shop Flexible
sur différents jeux de données.
Date de génération : Tue May 22 11:20:30 CEST 2018
--------------------------------------------------------------------------------------

----------------------------------------------
Tests sur le jeu de données de l'exemple du TP
----------------------------------------------
Nb. jobs = 3, Nb. machines = 3.

Stratégie 1 : Heuristique gloutonne puis Hill Climbing simple.

Coût de la solution trouvée : 12 [temps : 56 ms]

Stratégie 2 : Génération de 5 solutions aléatoires puis Hill Climbing simple.

sur chacune d'entre elles. On garde la meilleure solution trouvée.

On effectue cette stratégie 3 fois pour évaluer la part d'aléatoire dans les solutions trouvées :

[Essai 1] Coût de la meilleure solution trouvée : 9 [temps : 26 ms]
[Essai 2] Coût de la meilleure solution trouvée : 11 [temps : 14 ms]
[Essai 3] Coût de la meilleure solution trouvée : 10 [temps : 8 ms]

Meilleure : 9, moyenne : 10.0, ecart-type : 0.8164965809277289.

Stratégie 3 : Algorithme génétique à deux mutations et sélection par tournoi.

On génère une génération de 10 solutions aléatoires. Les 25 meilleures vont engendrer
des enfants en mutant (permutations sur OS et changements sur MA, ce qui donne un pool
de 75 solutions. On effectue un tournoi pour en retenir 50 et on recommence sur 10
générations.

On effectue cette stratégie 3 fois pour évaluer la part d'aléatoire dans les solutions trouvées :

[Essai 1] Coût de la meilleure solution trouvée : 10 [temps : 15 ms]
[Essai 2] Coût de la meilleure solution trouvée : 10 [temps : 3 ms]
[Essai 3] Coût de la meilleure solution trouvée : 10 [temps : 3 ms]

Meilleure : 10, moyenne : 10.0, ecart-type : 0.0.

Diagramme de Gantt de la meilleure solution trouvée parmi toutes ces stratégies :

Légende :
Job 1 : 1
Job 2 : 2
Job 3 : 3

-----------------------------------------------------
| Machine   1 : | 1 | 1 | 1 |   | 2 | 2 | 1 | 1 | 1 | 
-----------------------------------------------------
| Machine   2 : | 2 | 2 | 2 | 2 | 1 | 1 |   |   |   | 
-----------------------------------------------------
| Machine   3 : | 3 | 3 | 3 | 3 | 3 | 3 | 3 | 2 | 2 | 
-----------------------------------------------------

| Temps    : ---|---|---|---|---|---|---|---|---|---|-->
                0   1   2   3   4   5   6   7   8   9

Temps total : 9


----------------------------------------------------------------------------------
Tests sur le jeu de données "Monaldo/Fjsp/Job_Data/Brandimarte_Data/Text/Mk01.fjs"
----------------------------------------------------------------------------------
Nb. jobs = 10, Nb. machines = 6.

Stratégie 1 : Heuristique gloutonne puis Hill Climbing simple.

Coût de la solution trouvée : 74 [temps : 638 ms]

Stratégie 2 : Génération de 10 solutions aléatoires puis Hill Climbing simple.

sur chacune d'entre elles. On garde la meilleure solution trouvée.

On effectue cette stratégie 10 fois pour évaluer la part d'aléatoire dans les solutions trouvées :

[Essai 1] Coût de la meilleure solution trouvée : 60 [temps : 1120 ms]
[Essai 2] Coût de la meilleure solution trouvée : 62 [temps : 398 ms]
[Essai 3] Coût de la meilleure solution trouvée : 61 [temps : 362 ms]
[Essai 4] Coût de la meilleure solution trouvée : 60 [temps : 392 ms]
[Essai 5] Coût de la meilleure solution trouvée : 62 [temps : 357 ms]
[Essai 6] Coût de la meilleure solution trouvée : 60 [temps : 374 ms]
[Essai 7] Coût de la meilleure solution trouvée : 64 [temps : 387 ms]
[Essai 8] Coût de la meilleure solution trouvée : 62 [temps : 390 ms]
[Essai 9] Coût de la meilleure solution trouvée : 55 [temps : 472 ms]
[Essai 10] Coût de la meilleure solution trouvée : 69 [temps : 395 ms]

Meilleure : 55, moyenne : 61.5, ecart-type : 3.3541019662496847.

Stratégie 3 : Algorithme génétique à deux mutations et sélection par tournoi.

On génère une génération de 50 solutions aléatoires. Les 25 meilleures vont engendrer
des enfants en mutant (permutations sur OS et changements sur MA, ce qui donne un pool
de 75 solutions. On effectue un tournoi pour en retenir 50 et on recommence sur 50
générations.

On effectue cette stratégie 10 fois pour évaluer la part d'aléatoire dans les solutions trouvées :

[Essai 1] Coût de la meilleure solution trouvée : 61 [temps : 49 ms]
[Essai 2] Coût de la meilleure solution trouvée : 66 [temps : 33 ms]
[Essai 3] Coût de la meilleure solution trouvée : 65 [temps : 23 ms]
[Essai 4] Coût de la meilleure solution trouvée : 62 [temps : 20 ms]
[Essai 5] Coût de la meilleure solution trouvée : 63 [temps : 20 ms]
[Essai 6] Coût de la meilleure solution trouvée : 58 [temps : 18 ms]
[Essai 7] Coût de la meilleure solution trouvée : 67 [temps : 20 ms]
[Essai 8] Coût de la meilleure solution trouvée : 56 [temps : 20 ms]
[Essai 9] Coût de la meilleure solution trouvée : 58 [temps : 23 ms]
[Essai 10] Coût de la meilleure solution trouvée : 68 [temps : 23 ms]

Meilleure : 56, moyenne : 62.4, ecart-type : 3.929376540877707.

Diagramme de Gantt de la meilleure solution trouvée parmi toutes ces stratégies :

Légende :
Job 1 : 1
Job 2 : 2
Job 3 : 3
Job 4 : 4
Job 5 : 5
Job 6 : 6
Job 7 : 7
Job 8 : 8
Job 9 : 9
Job 10 : :

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
| Machine   1 : |   |   | 9 | 1 | 1 | 1 | 1 | 1 | 6 | 6 | 4 | 5 |   |   | 9 | 9 | 2 | 2 |   |   |   |   | 8 |   |   |   |   |   | 1 | 5 | 5 | 5 | 5 | 5 |   |   |   | 2 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   | 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
| Machine   2 : | 3 | 3 | 3 | 3 | 3 | 3 | 2 | 2 | 2 | 2 | 2 | 2 | 1 | 5 | 5 | 5 | 5 | 5 | 5 | 4 | 4 | 4 | 4 | 4 | 4 | 6 | 6 | 6 | 6 | 6 | 6 | 2 | 2 | 2 | 2 | 2 | 2 | 9 | 9 | 9 | 9 | 9 | 9 | 8 | 8 | 8 | 8 | 8 | 8 | 8 | 8 | 8 | 8 | 8 | 8 | 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
| Machine   3 : | 8 | 8 | 8 | 8 | 6 | 6 | 6 | 6 | 9 | 9 | 9 | 9 | 9 | 9 | 2 | : | : | : | : | : | : | : | : | : | 1 | 1 | 1 | 1 | 4 |   | 3 | 3 | 3 | 3 | 4 | 4 | 4 | 4 | 4 | 7 | 7 | 7 | 7 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 7 |   |   |   |   | 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
| Machine   4 : |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   | : | : | : | : | : | : | 7 | 7 |   |   |   | 6 | 6 | 5 | 5 | 5 | 5 | 5 | 5 | 9 | 9 | 9 | 9 | 9 | 9 | : | : |   |   |   | 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
| Machine   5 : | 5 | 5 | 5 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   | 3 | 3 | 3 | 3 | 3 |   |   |   |   | 7 |   |   |   |   |   |   |   |   |   |   |   | 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
| Machine   6 : | 7 | 9 | : | : |   |   |   |   |   |   | 6 | 6 | 6 | 6 | 6 | 6 | 8 | 8 | 8 | 8 | 8 | 8 | 3 | 3 | : | 3 | 3 | 3 | 3 | 3 |   | 6 | 6 | 6 | 6 | 6 |   |   |   | 4 | 4 |   |   |   | 5 | 5 | 5 | 5 | 5 | 5 |   |   |   |   |   | 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

| Temps    : ---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|-->
                0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55

Temps total : 55


----------------------------------------------------------------------------------
Tests sur le jeu de données "Monaldo/Fjsp/Job_Data/Brandimarte_Data/Text/Mk08.fjs"
----------------------------------------------------------------------------------


