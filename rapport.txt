--------------------------------------------------------------------------------------
Rapport de tests de nos différents algorithmes autour du problème du Job Shop Flexible
sur différents jeux de données.
Date de génération : Sat Jun 02 19:17:04 CEST 2018
--------------------------------------------------------------------------------------

----------------------------------------------
Tests sur le jeu de données de l'exemple du TP
----------------------------------------------
Nb. jobs = 3, Nb. machines = 3.

Stratégie 1 : Heuristique gloutonne puis Hill Climbing simple.

Coût de la solution trouvée : 12 [temps : 0 ms]

Stratégie 2 : Génération de 5 solutions aléatoires puis Hill Climbing simple.

sur chacune d'entre elles. On garde la meilleure solution trouvée.

On effectue cette stratégie 3 fois pour évaluer la part d'aléatoire dans les solutions trouvées :

[Essai 1] Coût de la meilleure solution trouvée : 9 [temps : 2 ms]
[Essai 2] Coût de la meilleure solution trouvée : 11 [temps : 1 ms]
[Essai 3] Coût de la meilleure solution trouvée : 9 [temps : 1 ms]

Meilleure : 9, moyenne : 9.666666666666666, ecart-type : 0.9428090415820692.
Temps moyen : 1 ms.

Stratégie 3 : Algorithme génétique à deux mutations et sélection par tournoi.

On génère une génération de 10 solutions aléatoires. Les 5 meilleures vont engendrer
des enfants en mutant (permutations sur OS et changements sur MA, ce qui donne un pool
de 15 solutions. On effectue un tournoi pour en retenir 10 et on recommence sur 10
générations.

On effectue cette stratégie 3 fois pour évaluer la part d'aléatoire dans les solutions trouvées :

[Essai 1] Coût de la meilleure solution trouvée : 9 [temps : 0 ms]
[Essai 2] Coût de la meilleure solution trouvée : 10 [temps : 0 ms]
[Essai 3] Coût de la meilleure solution trouvée : 9 [temps : 1 ms]

Meilleure : 9, moyenne : 9.333333333333334, ecart-type : 0.47140452079100825.
Temps moyen : 0 ms.

Diagramme de Gantt de la meilleure solution trouvée parmi toutes ces stratégies :

Légende :
Job 1 : 1
Job 2 : 2
Job 3 : 3

-----------------------------------------------------
| Machine   1 : | 1 | 1 | 1 |   | 2 | 2 | 1 | 1 | 1 | 
-----------------------------------------------------
| Machine   2 : | 2 | 2 | 2 | 2 | 1 | 1 | 3 | 3 | 3 | 
-----------------------------------------------------
| Machine   3 : | 3 | 3 |   |   |   |   | 2 | 2 |   | 
-----------------------------------------------------

| Temps    : ---|---|---|---|---|---|---|---|---|---|-->
                0   1   2   3   4   5   6   7   8   9

Temps total : 9


----------------------------------------------------------------------------------
Tests sur le jeu de données "Monaldo/Fjsp/Job_Data/Brandimarte_Data/Text/Mk01.fjs"
----------------------------------------------------------------------------------
Nb. jobs = 10, Nb. machines = 6.

Stratégie 1 : Heuristique gloutonne puis Hill Climbing simple.

Coût de la solution trouvée : 74 [temps : 125 ms]

Stratégie 2 : Génération de 10 solutions aléatoires puis Hill Climbing simple.

sur chacune d'entre elles. On garde la meilleure solution trouvée.

On effectue cette stratégie 100 fois pour évaluer la part d'aléatoire dans les solutions trouvées :

[Essai 1] Coût de la meilleure solution trouvée : 56 [temps : 544 ms]
[Essai 2] Coût de la meilleure solution trouvée : 61 [temps : 468 ms]
[Essai 3] Coût de la meilleure solution trouvée : 62 [temps : 489 ms]
[Essai 4] Coût de la meilleure solution trouvée : 62 [temps : 514 ms]
[Essai 5] Coût de la meilleure solution trouvée : 70 [temps : 735 ms]
[Essai 6] Coût de la meilleure solution trouvée : 68 [temps : 496 ms]
[Essai 7] Coût de la meilleure solution trouvée : 65 [temps : 483 ms]
[Essai 8] Coût de la meilleure solution trouvée : 67 [temps : 475 ms]
[Essai 9] Coût de la meilleure solution trouvée : 68 [temps : 542 ms]
[Essai 10] Coût de la meilleure solution trouvée : 68 [temps : 486 ms]
[Essai 11] Coût de la meilleure solution trouvée : 59 [temps : 465 ms]
[Essai 12] Coût de la meilleure solution trouvée : 66 [temps : 549 ms]
[Essai 13] Coût de la meilleure solution trouvée : 64 [temps : 473 ms]
[Essai 14] Coût de la meilleure solution trouvée : 68 [temps : 509 ms]
[Essai 15] Coût de la meilleure solution trouvée : 62 [temps : 481 ms]
[Essai 16] Coût de la meilleure solution trouvée : 67 [temps : 486 ms]
[Essai 17] Coût de la meilleure solution trouvée : 62 [temps : 527 ms]
[Essai 18] Coût de la meilleure solution trouvée : 75 [temps : 518 ms]
[Essai 19] Coût de la meilleure solution trouvée : 69 [temps : 517 ms]
[Essai 20] Coût de la meilleure solution trouvée : 66 [temps : 462 ms]
[Essai 21] Coût de la meilleure solution trouvée : 67 [temps : 532 ms]
[Essai 22] Coût de la meilleure solution trouvée : 62 [temps : 556 ms]
[Essai 23] Coût de la meilleure solution trouvée : 56 [temps : 512 ms]
[Essai 24] Coût de la meilleure solution trouvée : 61 [temps : 574 ms]
[Essai 25] Coût de la meilleure solution trouvée : 73 [temps : 469 ms]
[Essai 26] Coût de la meilleure solution trouvée : 68 [temps : 527 ms]
[Essai 27] Coût de la meilleure solution trouvée : 62 [temps : 488 ms]
[Essai 28] Coût de la meilleure solution trouvée : 66 [temps : 552 ms]
[Essai 29] Coût de la meilleure solution trouvée : 61 [temps : 562 ms]
[Essai 30] Coût de la meilleure solution trouvée : 73 [temps : 547 ms]
[Essai 31] Coût de la meilleure solution trouvée : 66 [temps : 516 ms]
[Essai 32] Coût de la meilleure solution trouvée : 61 [temps : 483 ms]
[Essai 33] Coût de la meilleure solution trouvée : 67 [temps : 558 ms]
[Essai 34] Coût de la meilleure solution trouvée : 67 [temps : 601 ms]
[Essai 35] Coût de la meilleure solution trouvée : 72 [temps : 499 ms]
[Essai 36] Coût de la meilleure solution trouvée : 72 [temps : 537 ms]
[Essai 37] Coût de la meilleure solution trouvée : 55 [temps : 482 ms]
[Essai 38] Coût de la meilleure solution trouvée : 72 [temps : 485 ms]
[Essai 39] Coût de la meilleure solution trouvée : 78 [temps : 480 ms]
[Essai 40] Coût de la meilleure solution trouvée : 66 [temps : 474 ms]
[Essai 41] Coût de la meilleure solution trouvée : 57 [temps : 517 ms]
[Essai 42] Coût de la meilleure solution trouvée : 72 [temps : 512 ms]
[Essai 43] Coût de la meilleure solution trouvée : 62 [temps : 575 ms]
[Essai 44] Coût de la meilleure solution trouvée : 62 [temps : 580 ms]
[Essai 45] Coût de la meilleure solution trouvée : 67 [temps : 497 ms]
[Essai 46] Coût de la meilleure solution trouvée : 55 [temps : 556 ms]
[Essai 47] Coût de la meilleure solution trouvée : 63 [temps : 537 ms]
[Essai 48] Coût de la meilleure solution trouvée : 70 [temps : 518 ms]
[Essai 49] Coût de la meilleure solution trouvée : 72 [temps : 572 ms]
[Essai 50] Coût de la meilleure solution trouvée : 66 [temps : 470 ms]
[Essai 51] Coût de la meilleure solution trouvée : 60 [temps : 530 ms]
[Essai 52] Coût de la meilleure solution trouvée : 67 [temps : 573 ms]
[Essai 53] Coût de la meilleure solution trouvée : 61 [temps : 509 ms]
[Essai 54] Coût de la meilleure solution trouvée : 57 [temps : 523 ms]
[Essai 55] Coût de la meilleure solution trouvée : 62 [temps : 477 ms]
[Essai 56] Coût de la meilleure solution trouvée : 60 [temps : 520 ms]
[Essai 57] Coût de la meilleure solution trouvée : 64 [temps : 523 ms]
[Essai 58] Coût de la meilleure solution trouvée : 59 [temps : 542 ms]
[Essai 59] Coût de la meilleure solution trouvée : 62 [temps : 593 ms]
[Essai 60] Coût de la meilleure solution trouvée : 66 [temps : 572 ms]
[Essai 61] Coût de la meilleure solution trouvée : 64 [temps : 660 ms]
[Essai 62] Coût de la meilleure solution trouvée : 69 [temps : 665 ms]
[Essai 63] Coût de la meilleure solution trouvée : 60 [temps : 597 ms]
[Essai 64] Coût de la meilleure solution trouvée : 55 [temps : 674 ms]
[Essai 65] Coût de la meilleure solution trouvée : 61 [temps : 605 ms]
[Essai 66] Coût de la meilleure solution trouvée : 63 [temps : 603 ms]
[Essai 67] Coût de la meilleure solution trouvée : 64 [temps : 576 ms]
[Essai 68] Coût de la meilleure solution trouvée : 62 [temps : 600 ms]
[Essai 69] Coût de la meilleure solution trouvée : 73 [temps : 651 ms]
[Essai 70] Coût de la meilleure solution trouvée : 67 [temps : 559 ms]
[Essai 71] Coût de la meilleure solution trouvée : 66 [temps : 625 ms]
[Essai 72] Coût de la meilleure solution trouvée : 60 [temps : 593 ms]
[Essai 73] Coût de la meilleure solution trouvée : 65 [temps : 553 ms]
[Essai 74] Coût de la meilleure solution trouvée : 60 [temps : 598 ms]
[Essai 75] Coût de la meilleure solution trouvée : 68 [temps : 720 ms]
[Essai 76] Coût de la meilleure solution trouvée : 80 [temps : 561 ms]
[Essai 77] Coût de la meilleure solution trouvée : 73 [temps : 558 ms]
[Essai 78] Coût de la meilleure solution trouvée : 73 [temps : 596 ms]
[Essai 79] Coût de la meilleure solution trouvée : 68 [temps : 559 ms]
[Essai 80] Coût de la meilleure solution trouvée : 73 [temps : 645 ms]
[Essai 81] Coût de la meilleure solution trouvée : 66 [temps : 588 ms]
[Essai 82] Coût de la meilleure solution trouvée : 61 [temps : 604 ms]
[Essai 83] Coût de la meilleure solution trouvée : 57 [temps : 611 ms]
[Essai 84] Coût de la meilleure solution trouvée : 62 [temps : 628 ms]
[Essai 85] Coût de la meilleure solution trouvée : 64 [temps : 585 ms]
[Essai 86] Coût de la meilleure solution trouvée : 66 [temps : 558 ms]
[Essai 87] Coût de la meilleure solution trouvée : 65 [temps : 575 ms]
[Essai 88] Coût de la meilleure solution trouvée : 66 [temps : 621 ms]
[Essai 89] Coût de la meilleure solution trouvée : 72 [temps : 673 ms]
[Essai 90] Coût de la meilleure solution trouvée : 56 [temps : 590 ms]
[Essai 91] Coût de la meilleure solution trouvée : 56 [temps : 660 ms]
[Essai 92] Coût de la meilleure solution trouvée : 74 [temps : 628 ms]
[Essai 93] Coût de la meilleure solution trouvée : 63 [temps : 577 ms]
[Essai 94] Coût de la meilleure solution trouvée : 62 [temps : 574 ms]
[Essai 95] Coût de la meilleure solution trouvée : 54 [temps : 579 ms]
[Essai 96] Coût de la meilleure solution trouvée : 68 [temps : 600 ms]
[Essai 97] Coût de la meilleure solution trouvée : 68 [temps : 656 ms]
[Essai 98] Coût de la meilleure solution trouvée : 67 [temps : 617 ms]
[Essai 99] Coût de la meilleure solution trouvée : 67 [temps : 552 ms]
[Essai 100] Coût de la meilleure solution trouvée : 63 [temps : 483 ms]

Meilleure : 56, moyenne : 64.95, ecart-type : 5.339241519167278.
Temps moyen : 555 ms.

Stratégie 3 : Algorithme génétique à deux mutations et sélection par tournoi.

On génère une génération de 250 solutions aléatoires. Les 125 meilleures vont engendrer
des enfants en mutant (permutations sur OS et changements sur MA, ce qui donne un pool
de 375 solutions. On effectue un tournoi pour en retenir 250 et on recommence sur 250
générations.

On effectue cette stratégie 100 fois pour évaluer la part d'aléatoire dans les solutions trouvées :

[Essai 1] Coût de la meilleure solution trouvée : 61 [temps : 676 ms]
[Essai 2] Coût de la meilleure solution trouvée : 57 [temps : 607 ms]
[Essai 3] Coût de la meilleure solution trouvée : 60 [temps : 667 ms]
[Essai 4] Coût de la meilleure solution trouvée : 56 [temps : 678 ms]
[Essai 5] Coût de la meilleure solution trouvée : 60 [temps : 683 ms]
[Essai 6] Coût de la meilleure solution trouvée : 60 [temps : 716 ms]
[Essai 7] Coût de la meilleure solution trouvée : 58 [temps : 681 ms]
[Essai 8] Coût de la meilleure solution trouvée : 61 [temps : 750 ms]
[Essai 9] Coût de la meilleure solution trouvée : 58 [temps : 687 ms]
[Essai 10] Coût de la meilleure solution trouvée : 58 [temps : 671 ms]
[Essai 11] Coût de la meilleure solution trouvée : 57 [temps : 664 ms]
[Essai 12] Coût de la meilleure solution trouvée : 58 [temps : 674 ms]
[Essai 13] Coût de la meilleure solution trouvée : 59 [temps : 670 ms]
[Essai 14] Coût de la meilleure solution trouvée : 61 [temps : 676 ms]
[Essai 15] Coût de la meilleure solution trouvée : 58 [temps : 679 ms]
[Essai 16] Coût de la meilleure solution trouvée : 58 [temps : 673 ms]
[Essai 17] Coût de la meilleure solution trouvée : 56 [temps : 683 ms]
[Essai 18] Coût de la meilleure solution trouvée : 57 [temps : 689 ms]
[Essai 19] Coût de la meilleure solution trouvée : 58 [temps : 712 ms]
[Essai 20] Coût de la meilleure solution trouvée : 61 [temps : 677 ms]
[Essai 21] Coût de la meilleure solution trouvée : 51 [temps : 674 ms]
[Essai 22] Coût de la meilleure solution trouvée : 54 [temps : 677 ms]
[Essai 23] Coût de la meilleure solution trouvée : 61 [temps : 584 ms]
[Essai 24] Coût de la meilleure solution trouvée : 58 [temps : 560 ms]
[Essai 25] Coût de la meilleure solution trouvée : 61 [temps : 571 ms]
[Essai 26] Coût de la meilleure solution trouvée : 59 [temps : 572 ms]
[Essai 27] Coût de la meilleure solution trouvée : 58 [temps : 564 ms]
[Essai 28] Coût de la meilleure solution trouvée : 56 [temps : 626 ms]
[Essai 29] Coût de la meilleure solution trouvée : 55 [temps : 676 ms]
[Essai 30] Coût de la meilleure solution trouvée : 55 [temps : 679 ms]
[Essai 31] Coût de la meilleure solution trouvée : 60 [temps : 685 ms]
[Essai 32] Coût de la meilleure solution trouvée : 58 [temps : 670 ms]
[Essai 33] Coût de la meilleure solution trouvée : 62 [temps : 684 ms]
[Essai 34] Coût de la meilleure solution trouvée : 57 [temps : 670 ms]
[Essai 35] Coût de la meilleure solution trouvée : 61 [temps : 680 ms]
[Essai 36] Coût de la meilleure solution trouvée : 57 [temps : 678 ms]
[Essai 37] Coût de la meilleure solution trouvée : 56 [temps : 702 ms]
[Essai 38] Coût de la meilleure solution trouvée : 60 [temps : 674 ms]
[Essai 39] Coût de la meilleure solution trouvée : 53 [temps : 691 ms]
[Essai 40] Coût de la meilleure solution trouvée : 60 [temps : 690 ms]
[Essai 41] Coût de la meilleure solution trouvée : 56 [temps : 683 ms]
[Essai 42] Coût de la meilleure solution trouvée : 58 [temps : 668 ms]
[Essai 43] Coût de la meilleure solution trouvée : 60 [temps : 668 ms]
[Essai 44] Coût de la meilleure solution trouvée : 57 [temps : 726 ms]
[Essai 45] Coût de la meilleure solution trouvée : 59 [temps : 673 ms]
[Essai 46] Coût de la meilleure solution trouvée : 60 [temps : 669 ms]
[Essai 47] Coût de la meilleure solution trouvée : 55 [temps : 687 ms]
[Essai 48] Coût de la meilleure solution trouvée : 59 [temps : 672 ms]
[Essai 49] Coût de la meilleure solution trouvée : 57 [temps : 668 ms]
[Essai 50] Coût de la meilleure solution trouvée : 59 [temps : 679 ms]
[Essai 51] Coût de la meilleure solution trouvée : 61 [temps : 715 ms]
[Essai 52] Coût de la meilleure solution trouvée : 57 [temps : 675 ms]
[Essai 53] Coût de la meilleure solution trouvée : 58 [temps : 681 ms]
[Essai 54] Coût de la meilleure solution trouvée : 59 [temps : 679 ms]
[Essai 55] Coût de la meilleure solution trouvée : 56 [temps : 684 ms]
[Essai 56] Coût de la meilleure solution trouvée : 59 [temps : 674 ms]
[Essai 57] Coût de la meilleure solution trouvée : 56 [temps : 683 ms]
[Essai 58] Coût de la meilleure solution trouvée : 57 [temps : 675 ms]
[Essai 59] Coût de la meilleure solution trouvée : 57 [temps : 699 ms]
[Essai 60] Coût de la meilleure solution trouvée : 60 [temps : 669 ms]
[Essai 61] Coût de la meilleure solution trouvée : 61 [temps : 678 ms]
[Essai 62] Coût de la meilleure solution trouvée : 55 [temps : 685 ms]
[Essai 63] Coût de la meilleure solution trouvée : 57 [temps : 676 ms]
[Essai 64] Coût de la meilleure solution trouvée : 61 [temps : 680 ms]
[Essai 65] Coût de la meilleure solution trouvée : 53 [temps : 685 ms]
[Essai 66] Coût de la meilleure solution trouvée : 56 [temps : 670 ms]
[Essai 67] Coût de la meilleure solution trouvée : 58 [temps : 667 ms]
[Essai 68] Coût de la meilleure solution trouvée : 58 [temps : 674 ms]
[Essai 69] Coût de la meilleure solution trouvée : 61 [temps : 617 ms]
[Essai 70] Coût de la meilleure solution trouvée : 60 [temps : 561 ms]
[Essai 71] Coût de la meilleure solution trouvée : 58 [temps : 558 ms]
[Essai 72] Coût de la meilleure solution trouvée : 60 [temps : 658 ms]
[Essai 73] Coût de la meilleure solution trouvée : 60 [temps : 687 ms]
[Essai 74] Coût de la meilleure solution trouvée : 59 [temps : 673 ms]
[Essai 75] Coût de la meilleure solution trouvée : 58 [temps : 687 ms]
[Essai 76] Coût de la meilleure solution trouvée : 53 [temps : 673 ms]
[Essai 77] Coût de la meilleure solution trouvée : 60 [temps : 682 ms]
[Essai 78] Coût de la meilleure solution trouvée : 56 [temps : 684 ms]
[Essai 79] Coût de la meilleure solution trouvée : 59 [temps : 568 ms]
[Essai 80] Coût de la meilleure solution trouvée : 56 [temps : 572 ms]
[Essai 81] Coût de la meilleure solution trouvée : 58 [temps : 592 ms]
[Essai 82] Coût de la meilleure solution trouvée : 56 [temps : 688 ms]
[Essai 83] Coût de la meilleure solution trouvée : 57 [temps : 668 ms]
[Essai 84] Coût de la meilleure solution trouvée : 57 [temps : 682 ms]
[Essai 85] Coût de la meilleure solution trouvée : 60 [temps : 686 ms]
[Essai 86] Coût de la meilleure solution trouvée : 57 [temps : 674 ms]
[Essai 87] Coût de la meilleure solution trouvée : 61 [temps : 672 ms]
[Essai 88] Coût de la meilleure solution trouvée : 60 [temps : 670 ms]
[Essai 89] Coût de la meilleure solution trouvée : 60 [temps : 664 ms]
[Essai 90] Coût de la meilleure solution trouvée : 56 [temps : 677 ms]
[Essai 91] Coût de la meilleure solution trouvée : 56 [temps : 686 ms]
[Essai 92] Coût de la meilleure solution trouvée : 54 [temps : 675 ms]
[Essai 93] Coût de la meilleure solution trouvée : 61 [temps : 710 ms]
[Essai 94] Coût de la meilleure solution trouvée : 61 [temps : 676 ms]
[Essai 95] Coût de la meilleure solution trouvée : 58 [temps : 674 ms]
[Essai 96] Coût de la meilleure solution trouvée : 59 [temps : 662 ms]
[Essai 97] Coût de la meilleure solution trouvée : 57 [temps : 674 ms]
[Essai 98] Coût de la meilleure solution trouvée : 59 [temps : 671 ms]
[Essai 99] Coût de la meilleure solution trouvée : 58 [temps : 677 ms]
[Essai 100] Coût de la meilleure solution trouvée : 58 [temps : 670 ms]

Meilleure : 51, moyenne : 58.06, ecart-type : 2.180917238227934.
Temps moyen : 667 ms.

Diagramme de Gantt de la meilleure solution trouvée parmi toutes ces stratégies :

Légende :
Job 1 : 1
Job 2 : 2
Job 3 : 3
Job 4 : 4
Job 5 : 5
Job 6 : 6
Job 7 : 7
Job 8 : 8
Job 9 : 9
Job 10 : :

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
| Machine   1 : | 4 | 1 | 1 | 1 | 1 | 1 |   |   | 6 | 6 | 2 | 2 |   |   |   |   |   |   |   |   |   |   |   |   |   |   | 8 |   |   |   | 1 | 9 | 9 |   |   |   |   |   |   |   |   |   |   |   |   | 6 | 3 | 6 | 6 | 6 |   | 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
| Machine   2 : | 2 | 2 | 2 | 2 | 2 | 2 |   |   | 5 | 5 | 5 | 5 | 5 | 5 | 4 | 4 | 4 | 4 | 4 | 4 | 3 | 3 | 3 | 3 | 3 | 3 | 1 | 8 | 8 | 8 | 8 | 8 | 8 | 2 | 2 | 2 | 2 | 2 | 2 | 6 | 6 | 6 | 6 | 6 | 6 | 9 | 9 | 9 | 9 | 9 | 9 | 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
| Machine   3 : | : | : | : | : | 6 | 6 | 6 | 6 | 2 |   |   |   |   |   | 5 | 5 | 5 | 5 | 7 | 7 | 7 | 7 | 8 | 8 | 8 | 8 | 4 | 6 | 6 | 6 | 6 | 7 | 1 | 5 | 5 | 5 | 5 | 9 | 9 | 9 | 9 | 4 | 4 | 4 | 4 | 1 | 1 | 1 | 1 | 1 | 1 | 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
| Machine   4 : |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   | 7 | 7 | 9 | 9 | 9 | : | : | : | : | : | : | 5 | 5 | 5 | 5 | 5 | 5 | : | : | 8 | 8 | 8 | 8 | 8 | 8 |   |   |   |   |   |   |   |   |   |   | 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
| Machine   5 : | 5 | 5 | 5 |   |   |   |   |   |   | 9 | 9 | 9 | 9 | 9 |   | : | : | : |   |   |   |   | 7 |   |   |   |   | 4 | 4 | 4 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   | 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
| Machine   6 : | 8 | 8 |   | 5 | 5 | 5 | 5 | 5 | 9 | : | : | : | : | : | : | 7 |   |   | : |   |   |   |   |   |   |   | 3 | 3 | 1 | 1 | 3 | 3 | 3 | 3 | 3 | 3 | 3 | 3 | 3 | 3 | 3 | 2 | 2 | 2 | 2 | 2 |   |   |   |   |   | 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

| Temps    : ---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|-->
                0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51

Temps total : 51


----------------------------------------------------------------------------------
Tests sur le jeu de données "Monaldo/Fjsp/Job_Data/Brandimarte_Data/Text/Mk02.fjs"
----------------------------------------------------------------------------------
Nb. jobs = 10, Nb. machines = 6.

Stratégie 1 : Heuristique gloutonne puis Hill Climbing simple.

Coût de la solution trouvée : 54 [temps : 121 ms]

Stratégie 2 : Génération de 10 solutions aléatoires puis Hill Climbing simple.

sur chacune d'entre elles. On garde la meilleure solution trouvée.

On effectue cette stratégie 20 fois pour évaluer la part d'aléatoire dans les solutions trouvées :

[Essai 1] Coût de la meilleure solution trouvée : 54 [temps : 865 ms]
[Essai 2] Coût de la meilleure solution trouvée : 46 [temps : 907 ms]
[Essai 3] Coût de la meilleure solution trouvée : 50 [temps : 869 ms]
[Essai 4] Coût de la meilleure solution trouvée : 52 [temps : 709 ms]
[Essai 5] Coût de la meilleure solution trouvée : 54 [temps : 700 ms]
[Essai 6] Coût de la meilleure solution trouvée : 54 [temps : 781 ms]
[Essai 7] Coût de la meilleure solution trouvée : 54 [temps : 822 ms]
[Essai 8] Coût de la meilleure solution trouvée : 50 [temps : 934 ms]
[Essai 9] Coût de la meilleure solution trouvée : 55 [temps : 966 ms]
[Essai 10] Coût de la meilleure solution trouvée : 50 [temps : 793 ms]
[Essai 11] Coût de la meilleure solution trouvée : 53 [temps : 1049 ms]
[Essai 12] Coût de la meilleure solution trouvée : 53 [temps : 833 ms]
[Essai 13] Coût de la meilleure solution trouvée : 50 [temps : 910 ms]
[Essai 14] Coût de la meilleure solution trouvée : 52 [temps : 810 ms]
[Essai 15] Coût de la meilleure solution trouvée : 53 [temps : 677 ms]
[Essai 16] Coût de la meilleure solution trouvée : 50 [temps : 697 ms]
[Essai 17] Coût de la meilleure solution trouvée : 50 [temps : 737 ms]
[Essai 18] Coût de la meilleure solution trouvée : 56 [temps : 756 ms]
[Essai 19] Coût de la meilleure solution trouvée : 49 [temps : 786 ms]
[Essai 20] Coût de la meilleure solution trouvée : 54 [temps : 735 ms]

Meilleure : 46, moyenne : 51.95, ecart-type : 2.4181604578687192.
Temps moyen : 816 ms.

Stratégie 3 : Algorithme génétique à deux mutations et sélection par tournoi.

On génère une génération de 500 solutions aléatoires. Les 250 meilleures vont engendrer
des enfants en mutant (permutations sur OS et changements sur MA, ce qui donne un pool
de 750 solutions. On effectue un tournoi pour en retenir 500 et on recommence sur 500
générations.

On effectue cette stratégie 20 fois pour évaluer la part d'aléatoire dans les solutions trouvées :

[Essai 1] Coût de la meilleure solution trouvée : 50 [temps : 3042 ms]
[Essai 2] Coût de la meilleure solution trouvée : 50 [temps : 3019 ms]
[Essai 3] Coût de la meilleure solution trouvée : 48 [temps : 3009 ms]
[Essai 4] Coût de la meilleure solution trouvée : 50 [temps : 3064 ms]
[Essai 5] Coût de la meilleure solution trouvée : 49 [temps : 3005 ms]
[Essai 6] Coût de la meilleure solution trouvée : 51 [temps : 3059 ms]
[Essai 7] Coût de la meilleure solution trouvée : 52 [temps : 2619 ms]
[Essai 8] Coût de la meilleure solution trouvée : 49 [temps : 2876 ms]
[Essai 9] Coût de la meilleure solution trouvée : 50 [temps : 3005 ms]
[Essai 10] Coût de la meilleure solution trouvée : 47 [temps : 2981 ms]
[Essai 11] Coût de la meilleure solution trouvée : 50 [temps : 3027 ms]
[Essai 12] Coût de la meilleure solution trouvée : 51 [temps : 3051 ms]
[Essai 13] Coût de la meilleure solution trouvée : 50 [temps : 3011 ms]
[Essai 14] Coût de la meilleure solution trouvée : 47 [temps : 3003 ms]
[Essai 15] Coût de la meilleure solution trouvée : 51 [temps : 3061 ms]
[Essai 16] Coût de la meilleure solution trouvée : 48 [temps : 3024 ms]
[Essai 17] Coût de la meilleure solution trouvée : 48 [temps : 2993 ms]
[Essai 18] Coût de la meilleure solution trouvée : 51 [temps : 3069 ms]
[Essai 19] Coût de la meilleure solution trouvée : 48 [temps : 3057 ms]
[Essai 20] Coût de la meilleure solution trouvée : 50 [temps : 3006 ms]

Meilleure : 47, moyenne : 49.5, ecart-type : 1.396424004376829.
Temps moyen : 2999 ms.

Diagramme de Gantt de la meilleure solution trouvée parmi toutes ces stratégies :

Légende :
Job 1 : 1
Job 2 : 2
Job 3 : 3
Job 4 : 4
Job 5 : 5
Job 6 : 6
Job 7 : 7
Job 8 : 8
Job 9 : 9
Job 10 : :

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
| Machine   1 : |   |   |   |   |   |   |   |   |   |   |   |   | 6 | 6 | 6 | 6 | 6 | 6 | : | : |   |   |   |   |   | 1 | : | : | : | : | 4 | 7 | 7 | 7 | 3 | 3 | 3 | 3 | 8 | 8 | 8 | 8 | 3 | 3 | 3 | 3 | 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
| Machine   2 : | 8 | 8 | 8 | 8 | 9 | 9 | 9 | 9 | 9 | 9 | 8 | 8 | 8 | 4 | 4 | 4 | 4 | 4 | 4 | 5 | 5 | 5 | 6 | 6 | 6 | 6 | 6 | 6 | 1 | 1 | 1 | 1 | 1 | 1 | 5 | 5 | 5 | 5 | 3 | 3 | 3 | 3 | 2 | 2 |   |   | 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
| Machine   3 : | 7 | 7 | 7 | 5 | 5 | 5 | 5 | 5 | 5 |   | 9 | 9 | 9 | 9 | 1 | 1 | 1 | 3 | 3 | 3 | 3 | 3 | 3 | 3 | 3 | 2 | 2 | 2 | 2 | 2 |   |   |   |   |   |   |   |   | 5 | 5 | 5 |   | 9 | 9 | 9 |   | 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
| Machine   4 : | : | : | : | 2 | 2 |   |   |   |   |   |   |   |   | 8 | 8 | 8 | 8 | 8 | 8 |   |   |   | 5 | 5 | 5 | 8 | 8 | 8 | 8 | 8 | 8 |   |   |   | 4 | 6 | 6 | 9 | 9 | 9 | 9 | 9 | 8 | 8 |   |   | 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
| Machine   5 : |   |   |   | 7 | 7 |   |   |   |   |   |   |   |   |   | 9 | 9 | 9 | 9 | 9 | 9 | 2 | 2 |   |   |   | 5 | 5 | 5 |   |   | : | : | : | : | : | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 |   | 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
| Machine   6 : | 4 | 4 | 4 | 4 | 6 | 6 | 6 | 6 | 6 | 6 | 6 | 6 | 3 | 3 | 3 | 3 | 3 | 2 | 2 | 2 | 1 | 1 | 1 | 1 | 1 | 7 | 7 | 7 | 7 | 7 | 7 | 4 | 4 | 4 |   | : | : | : | : | 7 | 7 | 7 |   |   |   |   | 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

| Temps    : ---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|-->
                0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46

Temps total : 46


Temps total d'exécution des tests : 198891 ms.
